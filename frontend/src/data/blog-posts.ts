import { BlogPost } from '@/types';

export const blogPosts: BlogPost[] = [
  //   {
  //     id: '1',
  //     title: 'Project New Eden 정식 출시 안내',
  //     summary:
  //       'AI 에이전트 기반의 시뮬레이션 게임 Project New Eden이 정식 출시되었습니다. 지금 다운로드하여 지능적인 에이전트들의 세계를 경험해보세요.',
  //     content: `
  // # Project New Eden 정식 출시 안내
  // 안녕하세요, AI 에이전트 시뮬레이션 게임 **Project New Eden**이 드디어 정식 출시되었습니다! 오랜 개발 과정과 베타 테스트를 거쳐 여러분께 선보이게 되어 매우 기쁩니다.
  // ## 출시 버전 주요 특징
  // ### 지능적인 AI 에이전트
  // - Gemma3 기반의 로컬 LLM을 활용한, 기억과, 경험, 반성 능력을 갖춘 에이전트
  // - 각 에이전트는 고유한 성격과 선호도를 가지며 시간이 지남에 따라 발전
  // - 과거 경험을 기억하고 이를 바탕으로 의사결정을 내리는 자연스러운 행동 패턴
  // ### 완전한 로컬 실행
  // - 인터넷 연결 없이도 완벽하게 실행 가능
  // - Ollama를 통한 효율적인 로컬 LLM 구동
  // - 빠른 응답 속도와 안정적인 성능
  // ### 생동감 있는 시뮬레이션 세계
  // - 다양한 환경과 상호작용 요소
  // - 시간에 따라 변화하는 세계와 상황
  // - 에이전트들의 자연스러운 일상과 상호작용
  // ## 시스템 요구사항
  // 현재는 **Windows** 환경만 지원합니다. macOS 및 Linux 버전은 추후 출시 예정입니다.
  // - **OS**: Windows 10/11 64비트
  // - **프로세서**: Intel i5 8세대 이상 또는 AMD Ryzen 5 3000 시리즈 이상
  // - **메모리**: 8GB RAM (16GB 권장)
  // - **그래픽**: DirectX 11 지원 그래픽 카드
  // - **저장공간**: 2GB 이상의 여유 공간
  // - **기타**: Ollama 설치 필요
  // ## 설치 방법
  // 1. [다운로드 페이지](/download)에서 최신 버전을 다운로드하세요.
  // 2. Ollama가 설치되어 있지 않다면, [Ollama 웹사이트](https://ollama.ai/download)에서 설치하세요.
  // 3. 다운로드한 ZIP 파일을 원하는 위치에 압축 해제합니다.
  // 4. 압축 해제된 폴더 내의 \`RunNewEden.bat\`를 실행합니다.
  // ## 앞으로의 계획
  // 1. **macOS 및 Linux 지원** - 다양한 플랫폼에서 즐길 수 있도록 확장할 예정입니다.
  // 2. **커스텀 에이전트 생성** - 자신만의 에이전트를 만들고 세계에 추가할 수 있는 기능.
  // 3. **새로운 환경과 상호작용** - 더 다양한 장소와 활동을 추가할 예정입니다.
  // 4. **멀티플레이어 모드** - 친구들과 함께 같은 세계를 공유할 수 있는 기능을 개발 중입니다.
  // ## 피드백 및 커뮤니티
  // 여러분의 피드백은 게임 발전에 큰 도움이 됩니다. 버그 제보, 기능 제안 또는 단순한 의견도 환영합니다.
  // - [공식 디스코드 서버](https://discord.gg/projectneweden)
  // - [GitHub 이슈 트래커](https://github.com/projectneweden/issues)
  // - 이메일: feedback@projectneweden.com
  // Project New Eden을 선택해 주셔서 감사합니다. 여러분이 만들어갈 고유한 이야기를 기대합니다!
  // AI 에이전트 시뮬레이션 개발팀 드림
  //     `,
  //     slug: 'project-new-eden-release',
  //     featuredImage: '/images/blog/release.jpg',
  //     authorName: '개발팀',
  //     tags: ['출시', '게임', '업데이트'],
  //     publishedAt: '2025-05-15T10:00:00Z',
  //   },
  //   {
  //     id: '2',
  //     title: '배치 처리 기반 메모리 반성 시스템 개선',
  //     summary:
  //       '에이전트 메모리 반성 시스템의 효율성과 성능을 향상시키기 위한 배치 처리 기술을 도입했습니다.',
  //     content: `
  // # 배치 처리 기반 메모리 반성 시스템 개선
  // Project New Eden의 핵심 기능 중 하나인 에이전트 반성 시스템이 크게 개선되었습니다. 이번 업데이트는 에이전트가 경험을 통해 더 빠르고 효율적으로 학습하도록 돕는 기술적 개선에 중점을 두었습니다.
  // ## 개선 배경
  // 기존 시스템에서 에이전트의 반성 생성은 각 기억마다 개별적으로 처리되어 상당한 시간이 소요되었습니다. 이로 인해 다수의 에이전트가 활동하는 환경에서 성능 저하가 발생했습니다. 이 문제를 해결하기 위해 배치 처리 방식을 도입했습니다.
  // ## 주요 개선 사항
  // ### 1. 배치 처리 시스템 도입
  // - 여러 기억을 단일 프롬프트로 묶어 한 번에 처리
  // - 중요도가 높은 기억을 우선적으로 처리하는 지능적 선별 기능
  // - 단일 API 호출로 다수의 반성을 동시에 생성
  // ### 2. 메모리 품질 향상
  // - 메모리와 중요도의 다양성 증가
  // - 보다 상세하고 유의미한 반성 생성을 위한 데이터 개선
  // - 기억 간 연결성 강화로 일관된 성격 발달 지원
  // ### 3. 반성 생성 프롬프트 최적화
  // - 배치 처리에 적합한 프롬프트 구조 재설계
  // - 에이전트 개성을 더 잘 반영하는 지시문 추가
  // - 자연스러운 1인칭 시점 반성 생성 개선
  // ## 성능 개선 결과
  // 배치 처리 방식의 도입으로 인한 가시적인 성과는 다음과 같습니다:
  // | 처리 방식 | 평균 처리 시간 | 메모리 사용 |
  // |---------|--------------|-----------|
  // | 개별 처리 | 100% (기준) | 100% (기준) |
  // | 배치 처리 | 약 35% 감소 | 약 20% 감소 |
  // 실제 게임 환경에서는 에이전트 반응 지연이 눈에 띄게 감소하고, 전체적인 게임 성능이 향상되었습니다.
  // ## 사용자 경험 개선
  // 이번 기술적 개선은 게임 플레이에 다음과 같은 긍정적인 영향을 미칩니다:
  // - **더 빠른 에이전트 반응**: 에이전트들이 상황에 더 신속하게 반응합니다
  // - **더 일관된 행동 패턴**: 향상된 반성 품질로 에이전트 행동의 일관성이 강화되었습니다
  // - **더 많은 에이전트 지원**: 시스템 효율성 향상으로 더 많은 수의 에이전트 동시 활동이 가능해졌습니다
  // ## 향후 계획
  // 향후 추가적인 최적화를 통해 메모리 반성 시스템을 더욱 개선할 예정입니다:
  // - 병렬 처리 기능 추가로 멀티코어 활용 최적화
  // - 기억 중요도 평가 알고리즘 개선
  // - 에이전트 간 기억 공유 메커니즘 구현
  // 이번 업데이트는 보다 몰입감 있고 자연스러운 AI 에이전트 경험을 제공하기 위한 우리의 지속적인 노력의 일환입니다. 여러분의 피드백을 통해 계속해서 시스템을 개선해 나가겠습니다.
  //     `,
  //     slug: 'batch-memory-reflection-system',
  //     featuredImage: '/images/blog/system-improvement.jpg',
  //     authorName: 'AI 연구팀',
  //     tags: ['기술', '최적화', '시스템개선'],
  //     publishedAt: '2025-04-28T14:30:00Z',
  //   },
  //   {
  //     id: '3',
  //     title: 'HTTP 통신 오버헤드 문제 해결 가이드',
  //     summary: 'Ollama API 사용 시 발생하는 HTTP 통신 지연 문제의 원인과 해결 방법을 알려드립니다.',
  //     content: `
  // # HTTP 통신 오버헤드 문제 해결 가이드
  // Project New Eden을 사용하시는 중 간헐적으로 에이전트 반응이 느려지는 현상을 경험하셨나요? 이 문제는 Ollama와의 HTTP 통신 과정에서 발생하는 오버헤드와 관련이 있습니다. 이 게시물에서는 문제의 원인과 해결 방법을 자세히 설명해 드리겠습니다.
  // ## 문제 현상
  // 많은 사용자들이 다음과 같은 상황을 보고했습니다:
  // - 게임을 처음 시작할 때는 정상적으로 작동
  // - 일정 시간 게임을 실행한 후 갑자기 에이전트 반응 속도가 현저히 느려짐
  // - 게임을 재시작하면 일시적으로 문제가 해결되지만, 다시 발생
  // 내부 테스트 결과, 이 문제는 다음과 같은 특징을 보였습니다:
  // - 단순한 "hi" 명령어를 HTTP로 전송 시 약 **2.5초** 지연
  // - 동일 명령을 직접 실행(subprocess)하면 **0.7초**로 정상 작동
  // - HTTP 통신에서 **약 1.8초의 추가 오버헤드** 발생
  // ## 원인 분석
  // 원인을 분석하기 위해 다양한 상황에서의 응답 시간을 측정했습니다:
  // | 상황 | 소요 시간 | 비고 |
  // |-----|---------|------|
  // | 최초 직접 실행 | 2.5초 | Ollama 모델 로드 시간 포함 |
  // | 이후 직접 실행 | 0.7초 | 정상 속도 |
  // | HTTP 최초 요청 | 2.5초 | 정상 (모델 로드 필요) |
  // | HTTP 세션 유지 상태 | 0.7초 | 정상 속도 |
  // | 약 10분 경과 후 HTTP 요청 | 2.5초 | 문제 발생 지점 |
  // 분석 결과, **Ollama의 자동 unload 기능**이 문제의 핵심 원인으로 확인되었습니다. Ollama는 일정 시간 동안 사용되지 않으면 메모리 관리를 위해 모델을 자동으로 unload하며, 이후 다시 요청이 들어오면 모델을 다시 로드하는 과정에서 지연이 발생합니다.
  // ### 설정 적용 결과
  // 환경 변수 설정 후 테스트 결과는 다음과 같습니다:
  // | 경과 시간 | 요청 응답 시간 |
  // |---------|--------------|
  // | 즉시 요청 | 0.7초 |
  // | 10분 후 요청 | 0.7초 |
  // | 60분 후 요청 | 0.7초 |
  // 모든 시간대에서 일관된 응답 속도를 보여, 문제가 성공적으로 해결되었음을 확인했습니다.
  // ## 추가 권장 사항
  // - **메모리 관리**: Ollama가 지속적으로 메모리를 사용하므로, 게임을 플레이하지 않을 때는 Ollama를 종료하는 것이 좋습니다.
  // - **하드웨어 요구사항**: 원활한 경험을 위해 최소 8GB RAM, 권장 16GB RAM을 확보하세요.
  // - **게임 설정**: 게임 내 설정에서 "에이전트 수" 옵션을 시스템 사양에 맞게 조정하세요.
  // 이 설정으로도 문제가 해결되지 않는다면, 공식 디스코드 채널이나 지원 이메일로 문의해 주세요. 보다 상세한 진단을 도와드리겠습니다.
  //     `,
  //     slug: 'http-communication-overhead-solution',
  //     featuredImage: '/images/blog/troubleshooting.jpg',
  //     authorName: '기술지원팀',
  //     tags: ['문제해결', '성능개선', '기술팁'],
  //     publishedAt: '2025-04-05T09:15:00Z',
  //   },
];
